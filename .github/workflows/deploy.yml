name: Deploy to AWS ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: fastapi-app
  ECS_CLUSTER: fastapi-cluster
  ECS_SERVICE: fastapi-service
  ECS_TASK_DEFINITION: .github/task-definition.json
  CONTAINER_NAME: fastapi-container
  ECR_URI: 396608779477.dkr.ecr.us-east-1.amazonaws.com/fastapi-app
  ECR_URI_NGINX: 396608779477.dkr.ecr.us-east-1.amazonaws.com/nginx-reverse-proxy

jobs:
  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI_NGINX

      - name: Build, tag, and push FastAPI image
        run: |
          docker build -t $ECR_REPOSITORY:latest .
          docker tag $ECR_REPOSITORY:latest $ECR_URI:latest
          docker push $ECR_URI:latest

      - name: Build, tag, and push Nginx image
        run: |
          docker build -t nginx -f Dockerfile.nginx .
          docker tag nginx:latest $ECR_URI_NGINX:latest
          docker push $ECR_URI_NGINX:latest

      - name: Register new task definition
        id: register-task
        run: |
          NEW_TASK_DEF=$(aws ecs register-task-definition --cli-input-json file://${{ env.ECS_TASK_DEFINITION }})
          echo "TASK_DEF_ARN=$(echo $NEW_TASK_DEF | jq -r '.taskDefinition.taskDefinitionArn')" >> $GITHUB_ENV

      - name: Update ECS service with new task definition
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --task-definition $TASK_DEF_ARN --force-new-deployment
